####################################################################################################

# Explore your data frame

# List the class of all columns (variables) in a data frame

  str(dataFrame)

# Sort a data frame by column

  dataFrame <- dataFrame[order(dataFrame[,3]), ]  # Sort by column 3 in acending order
  dataFrame <- dataFrame[order(-dataFrame[,3]), ] # Sort by column 3 in decending order
  
####################################################################################################

# Data manipulation

####################################################################################################

# Drop a variable from a dataframe

  dataFrame <- dataFrame[, !(names(df) %in% "var")])  # Will drop the column labelled "var" from the dataframe

# Drop multiple variables from a dataframe

  vars  <- c("var1", "var2") 
  
  dataFrame <- dataFrame[, !(names(df) %in% vars)])  # Will drop the columns listed in vars from the dataframe
  
# Keep only certain variables in a dataframe
 
  vars  <- c("var1", "var2") 
  
  dataFrame <- dataFrame[vars]

# Drop all obserations (rows) with any missing data

  dataFrame <- dataFrame[complete.cases(df), ]
  
# Drop observations with missing data for a given variable

  dataFrame <- dataFrame[!is.na(dataFrame$variable), ]



####################################################################################################

# Variable manipulation

####################################################################################################

# Collapse variables across levels of other variables

  aggregate(x ~ y + z, min, data = data, subset = v < 5) # Gives the minimum value of x across
                                                         # levels of y and z, in a data frame
                                                         # where v < 5.


####################################################################################################

# Graphs and Plots

####################################################################################################

# Using custom color palettes, based on ColorBrewer

  brewer.pal(6, "Blues")                                # Look at values for "Blues" with 6 hues. 
  cset <- c("#9ECAE1", "#6BAED6", "#3182BD" ,"#08519C") # Cut and paste "Blues", without the 2
                                                        # lighter hues. 
                                                        
  + scale_color_manual(name = "Title", values = cset)   # Use the new set of values in your plot 
                                                        # with ggplot2.
